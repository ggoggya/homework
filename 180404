1-1) 
x=c(17,16,20,24,22,15,21,18)
x[x>=20]

1-2)
x[x>=20]=100 -> y

2-1)
data.1<-seq(3,7,by=1)
x = diag(data.1)
x[x==0] <- (-1)

2-2)
x[,-5] -> y

2-3)
yinfo = c(dim(y))

2-4)
y[y==-1] <- 0
y -> y1

3-1)
rdata <- read.table("c:\tmp\rowdata.txt")

3-2)
is.na(rdata)

3-3)
subset(rdata, rdata$v2!==NA & rdata$v3!==NA)

3-4)
rdata1 <- na.omit(rdata)

4-1)
temp <- list(c(TRUE,FALSE), diag(2), seq(0,1,length=100), 1, 2, 3, 4)

4-2)
temp1 <- temp[-2] 

4-3)
temp1[3]
temp의 두 번째 원소가 제거 되었으므로 원래 4번째 원소였던 ‘1’이 3번째에 위치하는 결과값이다.

4-4)
length(temp)

5-1) a1 변수에 –1부터 2까지 정수를, a2 변수에 1부터 2까지 정수를 대입한다. 그리고 a1 변수의 값 + a2 변수의 값을 연산한다.
a1의 변수는 4개이고 a2의 변수는 2개이므로 a2는 2번씩 반복하여 연산한다.

5-2)
a1 변수에 –1부터 –2까지 정수를, a2 변수에 1부터 2까지 정수를 대입한다. 그리고 a1 변수의 값 + a2 변수의 값을 연산한다.
따라서 결과는 “0 0”이다. “(-1+1) (-2+2)”

5-3)
a1 변수에 원소가 0인 2×2 행렬을, a2 변수에 3, 4를 대입한다. 그리고 a1 행렬의 값 + a2 변수의 값을 연산한다. 따라서 결과는 3 3이다.              
                                                                                                                  4 4
5-4)
a1 변수에 원소가 1부터 4의 정수인 2×2 행렬을 대입한다. 행렬의 원소 중 2보다 큰 것은 0으로 바꾼다. 따라서 결과는 1 0이다.
                                                                                                         2 0

5-5)
a1 변수에 1부터 5의 정수를 대입한다. (a1에서 첫 번째 원소를 뺀 벡터 – a1에서 a1의 길이(5) 순에 있는 원소를 뺀 벡터)를 계산한다. 따라서 결과는 1 1 1 1이다. 
(2 3 4 5) - (1 2 3 4)

1.
a1=1
a2=3
for(i in 1:18)
{
  a3=0.9*a2-0.1*a1+1
  a1=a2
  a2=a3
}
a3

2.
a1=1
a2=3
for(i in 1:18)
{
  a3=0.9*a2-0.1*a1+1
  a1=a2
  a2=a3
  if(a3>4)
    break
}
i

3.
A <- matrix( runif(100), 50, 5)
for (i in 1:50)
{
  v[i]= sum(A[i,1:5])
}
print(v[1:50])

4.
tmp = rep(0, 10)
a <- 10:1
idx = 1
for ( j in a)
{
   if (j<5)
   {
   tmp[idx] <- a[j]
   idx <- idx + 1
   }
}
a가 10부터 5까지는 if문의 조건에 만족하지 않기 때문에 아무 실행도 없다가, a가 4이하가 되면 4부터 1까지 if문이 실행된다. 따라서 tmp의 첫 번째 원소에 a의 네 번째 원소가, tmp의 두 번째 원소에 a의 세 번쩨 원소가, tmp의 세 번째 원소에 a의 두 번째 원소가, tmp의 네 번째 원소에 a의 첫 번째 원소가 입력된다.

5.
x=matrix(runif(5000), 1000,5)

a=1:10
for(i in 1:1000)
{
  num[i]=sample(a,1,replace=TRUE)
}
sid <- cbind(x,num[1:1000])
colnames(sid)=c('1','2','3','4','5','num')
print(sid[,c(6,1,2,3,4,5)])

8-1)
set.seed(1)
a = list()
for (i in 1:1000)
{ 
  x = rpois(1,4)+1
  x = min(x,10) 
  a[[i]] = sample(1:10, x)
}

v=rep(0,10)
for (j in 2:10)
{
  for (i in 1:1000)
    if(length(a[[i]])==j)
    {
      x=v[j]
      v[j]=1+x
      x=v[j]
    }
}
v[-1]

9-1)
set.seed(1)
m1 = 10
m2 = 5
num = 0

for(i in 1:4)
{
  a=rbinom(1,1,1/2)
  if(a==0)
  {
    m1=m1-1
    m2=m2+1
  }
  else
  {
    m1=m1+1
    m2=m2-1
  }
}

답 : 10원

9-2)
2) 누가 몇 번 만에 게임에서 이기게 되는가?
set.seed(1)
m1 = 10
m2 = 5
num = 0
count=0

while (!((m1 == 0) || (m2 == 0)))
{
  a=rbinom(1,1,1/2)
  if(a==0)
  {
    m1=m1-1
    m2=m2+1
  }
  else
  {
    m1=m1+1
    m2=m2-1
  } 
  count <- count+1   
}
count

if(m1==15)
{
  cat("A가 ",count,"번만에 게임에서 이긴다.")
}
if(m2==15)
{  
  cat("B가 ",count,"번만에 게임에서 이긴다.")
}
 
답 : A가 191번만에 게임에서 이긴다.

9-3)
set.seed(1)
m1 = 10
m2 = 5
A.WINNER=0
B.WINNER=0

for (k in 1:200)
{
  set.seed(k)
  m1 = 10
  m2 = 5
  num = 0
  
  while(TRUE)
  {
    a=rbinom(1,1,1/2)
    if(a==0)
    {
      m1=m1-1
      m2=m2+1
    }
    else
    {
      m1=m1+1
      m2=m2-1
    } 
    if(m2==0)
    {
      A.WINNER=A.WINNER+1
      break
    }
    else if(m1==0)
    {
      B.WINNER=B.WINNER+1
      break
    }
  }
}
A.WINNER

10.
A.WINNER=0

for (k in 1:200)
{
  set.seed(k)
  m1 = 10
  m2 = 10   #### m2의 값만 바꿔주면 된다.
  num = 0
  
  while(TRUE)
  {
    a=rbinom(1,1,1/2)
    if(a==0)
    {
      m1=m1-1
      m2=m2+1
    }
    else
    {
      m1=m1+1
      m2=m2-1
    } 
    if(m2==0)
    {
      A.WINNER=A.WINNER+1
      break
    }
    else if(m1==0)
    {
      break
    }
  }
}
p <- A.WINNER/200
p

답 : 0.495 , 0.39 , 0.335 , 0.3 (왼쪽부터 차례로 B의 돈이 10원, 15원, 20원, 25원일 때)
